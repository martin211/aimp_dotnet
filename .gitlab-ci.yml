variables:
  GIT_STRATEGY: clone

stages:
  - build
  - deploy
  - analysis
  - artifacts

build_release:
  only:
    - master
    - develop
  stage: build
  script:
  - .\build.ps1 Compile -configuration Release

build_feature:
  only:
    - /^feature/
  stage: build
  script: 
  - .\build.ps1 Compile -configuration Debug

pack_release:
  variables:
    GIT_STRATEGY: none
  only:
    - master
    - develop
  stage: deploy
  script: 
  - .\build.ps1 Pack -configuration Release
  cache:
    paths:
    - output/*.nupkg

pack_debug:
  variables:
    GIT_STRATEGY: none
  only:
    - /^feature/
  stage: deploy
  script: 
  - .\build.ps1 Pack -configuration Debug
  cache:
    paths:
    - output/*.nupkg

publish_develop:
  variables:
    GIT_STRATEGY: none
  when: manual
  only:
    - /^feature/
  stage: deploy
  script: 
  - .\build.ps1 Publish -configuration Release -ApiKey $env:NUGET_ACCESS_TOKEN

publish_master:
  variables:
    GIT_STRATEGY: none
  when: manual
  only:
    - master
    - develop
  stage: deploy
  script: 
  - .\build.ps1 Publish -configuration Release -ApiKey $env:NUGET_ACCESS_TOKEN -NuGet true

analysis:
  stage: analysis
  variables:
    GIT_STRATEGY: none
  script:
  - .\build.ps1 RunVmWare
  - .\build.ps1 Analysis
  - .\build.ps1 PvsStudio
  - .\build.ps1 SonarQube

artifacts:
  only:
    - master
  stage: artifacts
  variables:
    GIT_STRATEGY: none
  script: .\build.ps1 Artifacts -configuration Release
  artifacts:
    when: on_success
    name: "aimp_dotnet"
    paths:
     - $env:CI_PROJECT_DIR/artifacts/aimp_dotnet.zip
    expire_in: 1 week
