variables:
  GIT_STRATEGY: clone

stages:
  - build
  - deploy
  - artifacts
  - analysis

build_release:
  only:
    - master
    - develop
  stage: build
  script:
  - .\build.ps1 Compile -configuration Release

build_feature:
  only:
    - /^feature/
  stage: build
  script: 
  - .\build.ps1 Compile -configuration Debug

pack_release:
  variables:
    GIT_STRATEGY: none
  only:
    - master
    - develop
  stage: deploy
  script: 
  - .\build.ps1 Pack -configuration Release

pack_debug:
  variables:
    GIT_STRATEGY: none
  only:
    - /^feature/
  stage: deploy
  script: 
  - .\build.ps1 Pack -configuration Debug
  cache:
    paths:
    - output/*.nupkg

publish_develop:
  variables:
    GIT_STRATEGY: none
  when: manual
  only:
    - /^feature/
  stage: deploy
  script: 
  - .\build.ps1 Publish -configuration Release -ApiKey $env:NUGET_ACCESS_TOKEN

publish_master:
  variables:
    GIT_STRATEGY: none
  when: manual
  only:
    - master
    - develop
  stage: deploy
  script: 
  - .\build.ps1 Publish -configuration Release -ApiKey $env:NUGET_ACCESS_TOKEN -NuGet true

Resharper_Analysis:
  variables:
    GIT_STRATEGY: none
  stage: analysis
  except:
    - tags
  script:
  - .\build.ps1 Analysis
  artifacts:
    when: on_success
    name: "Analysis result"
    paths:
     - $env:CI_PROJECT_DIR/output/Analysis/*
    expire_in: 1 week

SonarQube:
  variables:
    GIT_STRATEGY: none
  when: manual
  stage: analysis
  except:
    - tags
  script:
  - .\build.ps1 SonarQube -SonarUrl $env:SONAR_HOST -SonarUser $env:SONAR_USER -SonarPassword $env:SONAR_PASSWORD -SonarProjectKey "AIMP:SDK" -SonarProjectName "AIMPDotNetSDK"

artifacts:
  only:
    - master
    - develop
  stage: artifacts
  variables:
    GIT_STRATEGY: none
  script: .\build.ps1 Artifacts -configuration Release
  artifacts:
    when: on_success
    name: "aimp.sdk"
    paths:
     - $env:CI_PROJECT_DIR/output/Artifacts/aimp.sdk/*
    expire_in: 1 week
